import org.gradle.internal.os.OperatingSystem

plugins {
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0"
}

apply plugin: 'java'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['../../../java']
if (!OperatingSystem.current().isMacOsX()) {
    sourceSets.main.java.excludes += ['org/cef/browser/mac/**']
}

sourceSets.test.java.srcDirs = ['../../../java_tests']

compileJava.options.compilerArgs += [
    '--class-path', "$projectDir/../../../libthrift-0.16.0.jar:$projectDir/../../../slf4j-api-2.0.0.jar",
    '--module-path', "$projectDir/../../../third_party/jogamp/jar:$projectDir/../../../libthrift-0.16.0.jar:$projectDir/../../../slf4j-api-2.0.0.jar",
    '--add-modules', 'jogl.all,gluegen.rt,org.apache.thrift,org.slf4j',
    '--add-reads', 'jcef=ALL-UNNAMED',
    '--add-exports', 'jogl.all/com.jogamp.nativewindow=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl.awt=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl.util=jcef',
    '--add-exports', 'java.desktop/sun.awt=jcef',
    '--add-exports', 'java.desktop/java.awt.peer=jcef',
    '--add-exports', 'java.desktop/sun.lwawt.macosx=jcef',
    '--add-exports', 'java.desktop/sun.lwawt=jcef']

compileTestJava.options.compilerArgs += [
    '--class-path', "$projectDir/../../../libthrift-0.16.0.jar:$projectDir/../../../jb/project/java-gradle/build/classes/java/main:/Users/bocha/projects/jcef/third_party/junit/junit-platform-console-standalone-1.4.2.jar"
]

def jbr_java = test.executable
if (OperatingSystem.current().isWindows() && project.hasProperty('jbr_win')) {
    jbr_java = jbr_win + '/bin/java.exe'
} else if (OperatingSystem.current().isMacOsX() && project.hasProperty('jbr_mac')) {
    jbr_java = jbr_mac + '/bin/java'
} else if (OperatingSystem.current().isLinux() && project.hasProperty('jbr_linux')) {
    jbr_java = jbr_linux + '/bin/java'
}

test {
    useJUnitPlatform()
    include 'tests/junittests/**'

    failFast = true
    jvmArgs = ['-Djcef.junittests.isGradleLauncher=true',
               '--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED',
               '--add-exports=java.desktop/java.awt.peer=ALL-UNNAMED',
               '--add-opens=java.desktop/sun.awt=ALL-UNNAMED',
               '--add-exports=java.desktop/sun.awt=ALL-UNNAMED',
               '-Djcef.tests.osr=true'
    ]
    executable = jbr_java
}

dependencies {
    implementation files(
        "$projectDir/../../../third_party/jogamp/jar/jogl-all.jar",
        "$projectDir/../../../third_party/jogamp/jar/gluegen-rt.jar",
        "$projectDir/../../../libthrift-0.16.0.jar")
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.slf4j:slf4j-api:2.0.0'
    testImplementation files(
        "$projectDir/../../../third_party/junit/junit-platform-console-standalone-1.4.2.jar",
        "$projectDir/../../../libthrift-0.16.0.jar",
        "$projectDir/../../../third_party/jakarta/jakarta.xml.bind-api-2.3.2.jar")
}
