import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['../../../java']
if (!OperatingSystem.current().isMacOsX()) {
    sourceSets.main.java.excludes += ['org/cef/browser/mac/**']
}

sourceSets.test.java.srcDirs = ['../../../java_tests']

compileJava.options.compilerArgs += [
    '--module-path', "$projectDir/../../../third_party/jogamp/jar",
    '--add-modules', 'jogl.all,gluegen.rt',
    '--add-exports', 'jogl.all/com.jogamp.nativewindow=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl.awt=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl=jcef',
    '--add-exports', 'jogl.all/com.jogamp.opengl.util=jcef',
    '--add-exports', 'java.desktop/sun.awt=jcef',
    '--add-exports', 'java.desktop/java.awt.peer=jcef',
    '--add-exports', 'java.desktop/sun.lwawt.macosx=jcef',
    '--add-exports', 'java.desktop/sun.lwawt=jcef']

def test_jvm = project.hasProperty('jbrsdk') ?
    jbrsdk + (OperatingSystem.current().isWindows() ? '/bin/java.exe' : '/bin/java') :
    test.executable // use default

test {
    useJUnitPlatform()
    include 'tests/junittests/**'

    failFast = true
    jvmArgs = ['-Djcef.junittests.isGradleLauncher=true']
    executable = test_jvm
}

dependencies {
    compile files(
        "$projectDir/../../../third_party/jogamp/jar/jogl-all.jar",
        "$projectDir/../../../third_party/jogamp/jar/gluegen-rt.jar")
    testCompile files(
        "$projectDir/../../../third_party/junit/junit-platform-console-standalone-1.4.2.jar",
        "$projectDir/../../../third_party/jakarta/jakarta.xml.bind-api-2.3.2.jar")
}
